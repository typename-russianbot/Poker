#include "../../includes/master.h"
#pragma once

//~ @struct:
struct Cards
{
    //& Components
    Rank mRank;
    Suit mSuit;

    //& Overloads
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //* @public: operator<<
    friend ostream &operator<<(ostream &, Cards);

    //* @public: operator=
    Cards &operator=(Cards &);

    //* @public: operator==
    bool operator==(Cards &) const;
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};

//~ @class: MasterDeck
class Deck
{
private:
    //& Components
    Cards mSequence[52]; //* uniquely generated card sequence
    stack<Cards> mStack; //* pushes back cards onto the stack in same sequence as mPattern

public:
    //& Resources
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //* Constructor
    Deck(void);

    //* Destructor
    ~Deck(void);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //& Functions
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    //* @public: shuffle
    bool shuffle(void);

    //* @public: reshuffle
    bool reshuffle(void);

    //* @public: draw
    Cards draw(void);
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //& Overloads
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
};
